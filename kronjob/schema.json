{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$comment": "Abstract definition of a collection of Jobs/CronJobs. Each generated Job/CronJob must include the fields `'name`, `image`, and `schedule`. When draft-08 of json schema is released we should be able to validate that unused properties are disallowed without the propertyNames gymnastics.",
  "type": "object",
  "allOf": [
    {"$ref": "#/definitions/job"},
    {"$ref": "#/definitions/parentJob"}
  ],
  "anyOf": [
    {"$ref": "#/definitions/jobNames"},
    {"$ref": "#/definitions/parentJobNames"}
  ],
  "definitions": {
    "parentJob": {
      "type": "object",
      "properties": {
        "jobs": {
          "$comment": "An array of jobs that will inherit, and can override, properties from the top level.",
          "type": "array",
          "items": {"$ref": "#/definitions/job"}
        }
      }
    },
    "parentJobNames": {
      "propertyNames": {"enum": ["jobs"]}
    },
    "job": {
      "$comment": "Abstract definition of a single job/cron job",
      "type": "object",
      "properties": {
        "annotations": {
          "$comment": "`annotations` in metadata for generated pod template specs",
          "type": "object"
        },
        "args": {
          "$comment": "`args` in generated container specs.",
          "type": "array",
          "items": {"type": "string"}
        },
        "concurrencyPolicy": {
          "$comment": "`concurrencyPolicy` in generated cron job specs.",
          "type": "string"
        },
        "env": {
          "$comment": "`env` in generated container specs. Values specified in the top level, and `jobs` will be concatenated.",
          "type": "array",
          "items": {"type": "object"}
        },
        "command": {
          "$comment": "`command` in generated container specs.",
          "type": "array",
          "items": {"type": "string"}
        },
        "containerName": {
          "$comment": "`name` in generated container specs.",
          "type": "string",
          "default": "job"
        },
        "cpuLimit": {
          "$comment": "`resources.limits.cpu` in generated container specs.",
          "type": "string"
        },
        "cpuRequest": {
          "$comment": "`resources.requests.cpu` in generated container specs.",
          "type": "string"
        },
        "failedJobsHistoryLimit": {
          "$comment": "`failedJobsHistoryLimit` in generated cron job specs.",
          "type": "integer",
          "minimum": 1
        },
        "image": {
          "$comment": "`image` in generated container specs.",
          "type": "string"
        },
        "imagePullPolicy": {
          "$comment": "`imagePullPolicy` in generated container specs.",
          "type": "string"
        },
        "labelKey": {
          "$comment": "Replaces the default label key of `kronjob/job` that is added to resource metadata",
          "type": "string"
        },
        "memoryLimit": {
          "$comment": "`resources.limits.memory` in generated container specs.",
          "type": "string"
        },
        "memoryRequest": {
          "$comment": "`resources.requests.memory` in generated container specs.",
          "type": "string"
        },
        "name": {
          "$comment": "`name` in metadata for generated job and cron job specs. Also used as a label value (see `labelKey`).",
          "type": "string"
        },
        "namespace": {
          "$comment": "`namespace` in metadata for generated job and cron job specs.",
          "type": "string"
        },
        "nodeSelector": {
          "$comment": "`nodeSelector` in generated pod specs.",
          "type": "object"
        },
        "restartPolicy": {
          "$comment": "`restartPolicy` in generated pod specs.",
          "type": "string"
        },
        "schedule": {
          "$comment": "Dictates that this should be a cron job if a valid Cron format is given - `schedule` in the generated cron job specs. Dictates that this should be a job if the string \"once\" is given.",
          "type": "string"
        },
        "successfulJobsHistoryLimit": {
          "$comment": "`successfulJobsHistoryLimit` in generated cron job specs.",
          "type": "integer",
          "minimum": 1
        },
        "suspend": {
          "$comment": "`suspend` in generated cron job specs.",
          "type": "boolean"
        },
        "volumes": {
          "$comment": "`volumes` in generated pod specs.",
          "type": "array"
        }
      }
    },
    "jobNames": {
      "propertyNames": {"enum": ["annotations", "args", "concurrencyPolicy", "env", "command", "containerName", "cpuLimit", "cpuRequest", "failedJobsHistoryLimit", "image", "imagePullPolicy", "labelKey", "memoryLimit", "memoryRequest", "name", "namespace", "nodeSelector", "restartPolicy", "schedule", "successfulJobsHistoryLimit", "suspend", "volumes"]}
    }
  }
}
